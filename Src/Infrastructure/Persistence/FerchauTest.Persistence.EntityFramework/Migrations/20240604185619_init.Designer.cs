// <auto-generated />
using System;
using FerchauTest.Persistence.EntityFramework.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FerchauTest.Persistence.EntityFramework.Migrations
{
    [DbContext(typeof(FerchauDbContext))]
    [Migration("20240604185619_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FerchauTest.Domain.Cars.Car", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalKilometres")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Car");
                });

            modelBuilder.Entity("FerchauTest.Domain.Cars.Entities.Contract", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("CarId1")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("EndDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("UsedKilometers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId1");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("FerchauTest.Domain.Customers.Customer", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("FerchauTest.Domain.Cars.Car", b =>
                {
                    b.OwnsOne("FerchauTest.Domain.Cars.ValueObjects.Brand", "Brand", b1 =>
                        {
                            b1.Property<long>("CarId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Brand");

                            b1.HasKey("CarId");

                            b1.ToTable("Car");

                            b1.WithOwner()
                                .HasForeignKey("CarId");
                        });

                    b.OwnsOne("FerchauTest.Domain.Cars.ValueObjects.Model", "Model", b1 =>
                        {
                            b1.Property<long>("CarId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Model");

                            b1.HasKey("CarId");

                            b1.ToTable("Car");

                            b1.WithOwner()
                                .HasForeignKey("CarId");
                        });

                    b.Navigation("Brand")
                        .IsRequired();

                    b.Navigation("Model")
                        .IsRequired();
                });

            modelBuilder.Entity("FerchauTest.Domain.Cars.Entities.Contract", b =>
                {
                    b.HasOne("FerchauTest.Domain.Cars.Car", "Car")
                        .WithMany("Contracts")
                        .HasForeignKey("CarId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FerchauTest.Domain.Cars.ValueObjects.CorelationId", "CarId", b1 =>
                        {
                            b1.Property<long>("ContractId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Value")
                                .HasColumnType("bigint")
                                .HasColumnName("CarId");

                            b1.HasKey("ContractId");

                            b1.ToTable("Contract");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsOne("FerchauTest.Domain.Cars.ValueObjects.CorelationId", "CustomerId", b1 =>
                        {
                            b1.Property<long>("ContractId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Value")
                                .HasColumnType("bigint")
                                .HasColumnName("CustomerId");

                            b1.HasKey("ContractId");

                            b1.ToTable("Contract");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.Navigation("Car");

                    b.Navigation("CarId")
                        .IsRequired();

                    b.Navigation("CustomerId")
                        .IsRequired();
                });

            modelBuilder.Entity("FerchauTest.Domain.Customers.Customer", b =>
                {
                    b.OwnsOne("FerchauTest.Domain.Customers.ValueObjects.FirstName", "Firstname", b1 =>
                        {
                            b1.Property<long>("CustomerId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("FirstName");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("FerchauTest.Domain.Customers.ValueObjects.LastName", "Lastname", b1 =>
                        {
                            b1.Property<long>("CustomerId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("LastName");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("FerchauTest.Domain.Customers.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<long>("CustomerId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("nvarchar(14)")
                                .HasColumnName("PhoneNumber");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("Firstname")
                        .IsRequired();

                    b.Navigation("Lastname")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();
                });

            modelBuilder.Entity("FerchauTest.Domain.Cars.Car", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
